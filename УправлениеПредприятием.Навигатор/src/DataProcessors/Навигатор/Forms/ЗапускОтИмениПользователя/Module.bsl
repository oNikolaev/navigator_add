#Область Форма

#Область События

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИдПользователя = Параметры.ИдПользователя;
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдПользователя);
	
	ИмяПользователяИБ = ПользовательИБ.Имя;
	
	//
	
	Элементы.ВрДобавитьРольАдминистраторСистемы.Доступность = Ложь;
	ЕстьРольАдминистраторСистемы = Не (Метаданные.Роли.Найти("АдминистраторСистемы") = Неопределено);
	
	Если ЕстьРольАдминистраторСистемы Тогда
		Роль = РольКонфигурации("АдминистраторСистемы");
		Если Не ПользовательИБ.Роли.Содержит(Роль) Тогда
			Элементы.ВрДобавитьРольАдминистраторСистемы.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ВрДобавитьРольПолныеПрава.Доступность = Ложь;
	ЕстьРольПолныеПрава = Не (Метаданные.Роли.Найти("ПолныеПрава") = Неопределено);
	
	Если ЕстьРольПолныеПрава Тогда
		Роль = РольКонфигурации("ПолныеПрава");
		Если Не ПользовательИБ.Роли.Содержит(Роль) Тогда
			Элементы.ВрДобавитьРольПолныеПрава.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	//
	
	РежимЗапуска = "Авто";
	
КонецПроцедуры

#КонецОбласти

#Область Элементы

#КонецОбласти

#Область Таблицы

#Область ИмяТаблицы
#КонецОбласти

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура КомандаЗапуститьОтИмениПользователя(Команда)
	
	СвойстваПользователя = Неопределено;
	
	УстановитьСвойстваПользователяДляЗапускаСеанса(СвойстваПользователя);
	
	Если СвойстваПользователя = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	
	Попытка
		ЗапуститьПриложениеОтИмениПользователя(СвойстваПользователя.Пароль);
	Исключение
		УстановитьИсхСвойстваПользователя(СвойстваПользователя);
		ВызватьИсключение;
	КонецПопытки;
	
	//
	
	УстановитьИсхСвойстваПользователя(СвойстваПользователя); 
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Подключаемые
#КонецОбласти

#Область Процедуры

&НаКлиенте
Процедура ЗапуститьПриложениеОтИмениПользователя(ПарольПользователяИБ)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяПользователяИБ) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	
	ПараметрыЗапуска = "";
	ПараметрыЗапуска = ПараметрыЗапуска + " /N""" + ИмяПользователяИБ + """";
	
	Если ЗначениеЗаполнено(ПарольПользователяИБ) Тогда
		ПараметрыЗапуска = ПараметрыЗапуска + " /P""" + ПарольПользователяИБ + """";
	КонецЕсли;
	
	Если РежимЗапуска = "Авто" Тогда
		ПараметрыЗапуска = ПараметрыЗапуска + " /AppAutoCheckMode";
	ИначеЕсли РежимЗапуска = "ОбычноеПриложение" Тогда
		ПараметрыЗапуска = ПараметрыЗапуска + " /RunModeOrdinaryApplication";
	ИначеЕсли РежимЗапуска = "УправляемоеПриложение" Тогда
		ПараметрыЗапуска = ПараметрыЗапуска + " /RunModeManagedApplication";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДпПараметрыЗапуска) Тогда
		ПараметрыЗапуска = ПараметрыЗапуска + " " + ДпПараметрыЗапуска;
	КонецЕсли;
	
	ДатаЗапускаСеанса = ТекущаяДата();
	ЗапуститьСистему(ПараметрыЗапуска);
	
	Состояние("Ожидание запуска сеанса...");
	
	Запущен = Ложь;
	ДатаПоследнегоВопроса = ТекущаяДата();
	ГраницаПроверкиСек = 10;
	
	Пока Не Запущен Цикл
		
		ОбработкаПрерыванияПользователя();
		
		Если (ДатаЗапускаСеанса - ДатаПоследнегоВопроса) >= ГраницаПроверкиСек Тогда
			
			ПоказатьВопрос(
				Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры), 
				"Продолжить выполнение операции?", РежимДиалогаВопрос.ДаНет, 0); 
			
			Прервать;
			
		КонецЕсли;
		
		Запущен = СеансОтИмениПользователяЗапущен();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Ответ, Параметры) Экспорт
	
	#Область Предусловия
	
	Если (Ответ = КодВозвратаДиалога.Нет) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	Состояние("Ожидание запуска сеанса ...", , "Выполняется попытка запуска сеанса от имени пользователя", );
	
	Запущен = Ложь;
	
	ДатаПоследнегоВопроса = ТекущаяДата();
	ГраницаПроверкиСек = 10;
	
	Пока Не Запущен Цикл
		
		ОбработкаПрерыванияПользователя();
		
		Если (ТекущаяДата() - ДатаПоследнегоВопроса) >= ГраницаПроверкиСек Тогда
			
			ТекстВопроса = 
				"В течение " + ГраницаПроверкиСек + " сек не удалось запустить сеанс от имени пользователя.
				|Продолжить выполнение операции?";
			
			ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры), ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0); 
			
			Прервать;
			
		КонецЕсли;
		
		Запущен = СеансОтИмениПользователяЗапущен();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваПользователяДляЗапускаСеанса(СвойстваПользователя)
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдПользователя);
	ХэшПароля = ПользовательИБ.СохраняемоеЗначениеПароля;
	
	//
	
	ВернутьАутентификацияСтандартная = Ложь;
	ВернутьАутентификацияОС = Ложь;
	
	Если Не ПользовательИБ.АутентификацияСтандартная Тогда 
		ПользовательИБ.АутентификацияСтандартная = Истина;
		ВернутьАутентификацияСтандартная = Истина;
	КонецЕсли;
	
	Если ПользовательИБ.АутентификацияОС Тогда 
		ПользовательИБ.АутентификацияОС = Ложь;
		ВернутьАутентификацияОС = Истина;
	КонецЕсли;
	
	//
	
	ВременныйПароль = "";
	
	Если ИзменятьПарольПользователяПриЗапуске Тогда
		ВременныйПароль = "123";
		ПользовательИБ.Пароль = ВременныйПароль;
	КонецЕсли;
	
	//
	
	УдалитьРольАдминистраторСистемы = Ложь;
	
	Если ВрДобавитьРольАдминистраторСистемы Тогда
		
		Если Не ПользовательИБ.Роли.Содержит(Метаданные.Роли.АдминистраторСистемы) Тогда
			ПользовательИБ.Роли.Добавить(Метаданные.Роли.АдминистраторСистемы);
			УдалитьРольАдминистраторСистемы = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	УдалитьРольПолныеПрава = Ложь;
	
	Если ВрДобавитьРольПолныеПрава Тогда
		
		Если Не ПользовательИБ.Роли.Содержит(Метаданные.Роли.ПолныеПрава) Тогда
			ПользовательИБ.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
			УдалитьРольПолныеПрава = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ПользовательИБ.Записать();
	
	//
	
	СвойстваПользователя = Новый Структура;
	СвойстваПользователя.Вставить("ХэшПароля",                        ХэшПароля);
	СвойстваПользователя.Вставить("ВернутьАутентификацияСтандартная", ВернутьАутентификацияСтандартная);
	СвойстваПользователя.Вставить("ВернутьАутентификацияОС",          ВернутьАутентификацияОС);
	СвойстваПользователя.Вставить("УдалитьРольАдминистраторСистемы",  УдалитьРольАдминистраторСистемы);
	СвойстваПользователя.Вставить("УдалитьРольПолныеПрава",           УдалитьРольПолныеПрава);
	СвойстваПользователя.Вставить("Пароль",                           ВременныйПароль);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИсхСвойстваПользователя(СвойстваПользователя)
	
	#Область Предусловия
	
	Если (СвойстваПользователя = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдПользователя); 
	
	Если ИзменятьПарольПользователяПриЗапуске Тогда
		ПользовательИБ.СохраняемоеЗначениеПароля = СвойстваПользователя.ХэшПароля;
	КонецЕсли;
	
	Если СвойстваПользователя.ВернутьАутентификацияСтандартная Тогда 
		ПользовательИБ.АутентификацияСтандартная = Ложь; 
	КонецЕсли;
	
	Если СвойстваПользователя.ВернутьАутентификацияОС Тогда 
		ПользовательИБ.АутентификацияОС = Истина; 
	КонецЕсли;
	
	Если СвойстваПользователя.УдалитьРольАдминистраторСистемы Тогда
		ПользовательИБ.Роли.Удалить(Метаданные.Роли.АдминистраторСистемы);
	КонецЕсли;
	
	Если СвойстваПользователя.УдалитьРольПолныеПрава Тогда
		ПользовательИБ.Роли.Удалить(Метаданные.Роли.ПолныеПрава);
	КонецЕсли;
	
	ПользовательИБ.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область Функции

&НаСервере
Функция СеансОтИмениПользователяЗапущен()
	
	Результат = Ложь;
	ПустойРезультат = Ложь;
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяПользователяИБ) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаЗапускаСеанса) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	#КонецОбласти
	
	СеансЗапущен = Ложь;
	
	ВсеСеансы = ПолучитьСеансыИнформационнойБазы();
	
	Для Каждого ЗапущенныйСеанс Из ВсеСеансы Цикл
		
		Если ЗапущенныйСеанс.НачалоСеанса >= ДатаЗапускаСеанса 
			И НРег(ЗапущенныйСеанс.ИмяКомпьютера) = НРег(ИмяКомпьютера()) 
			И Не (ЗапущенныйСеанс.Пользователь = Неопределено)
			И НРег(ЗапущенныйСеанс.Пользователь.Имя) = НРег(ИмяПользователяИБ) Тогда
			
			СеансЗапущен = Истина;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//
	
	Результат = СеансЗапущен;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РольКонфигурации(ИмяРоли)
	
	Результат = Неопределено;
	ПустойРезультат = Неопределено;
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяРоли) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	Роль = Метаданные.Роли.Найти(ИмяРоли);
	
	//
	
	Результат = Роль;
	Возврат Результат;
	
КонецФункции

#КонецОбласти

