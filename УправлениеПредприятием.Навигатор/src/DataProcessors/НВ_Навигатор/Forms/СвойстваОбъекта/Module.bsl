#Область Форма

#Область События

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяКоллекции         = Параметры.ИмяКоллекции;
	ИмяОбъектаБазы       = Параметры.ИмяОбъектаБазы;
	ИмяЭлементаКоллекции = Параметры.ИмяЭлементаКоллекции;
	
	Заголовок = ИмяЭлементаКоллекции + "." + ИмяОбъектаБазы;
	
	ЗаполнитьСвойстваОбъектаБазы();
	ЗаполнитьВсеРолиСистемы();
	ЗаполнитьВсеПраваСистемы();
	
	ЗаполнитьОтборРолейПоПравам();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "Навигатор" Тогда
		
		Если ИмяСобытия = "ЗакрытьВсеОкнаРедакторов" Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Элементы

#Область ВсеРолиСистемы

&НаКлиенте
Процедура ВсеРолиСистемыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВсеРолиСистемы.ТекущиеДанные;
	
	Если (ТекущиеДанные = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРоли = ТекущиеДанные.Имя;
	
	ЗаполнитьПраваРоли(ИмяРоли);
	УстановитьЗаголовокПраваРоли(ЭтаФорма, ИмяРоли);
	
КонецПроцедуры

#КонецОбласти 

#Область ОтборРолейПоПравам

&НаКлиенте
Процедура ОтборРолейПоПравамПометкаПриИзменении(Элемент)
	
	ПриИзмененииОтборРолейПоПравамПометка();
	
КонецПроцедуры

#Область Команды

&НаКлиенте
Процедура КомандаОтборРолейПоПравамУстановитьПометки(Команда)
	
	ОтборРолейПоПравамУстановитьПометки();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтборРолейПоПравамСнятьПометки(Команда)
	
	ОтборРолейПоПравамСнятьПометки();
	
КонецПроцедуры

#КонецОбласти 

#Область Методы

&НаКлиенте
Процедура ОтборРолейПоПравамУстановитьПометки()
	
	ОтборРолейПоПравамПометка(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРолейПоПравамСнятьПометки()
	
	ОтборРолейПоПравамПометка(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРолейПоПравамПометка(Пометка)
	
	Для каждого стр_ОтборРолейПоПравам Из ОтборРолейПоПравам Цикл
		
		стр_ОтборРолейПоПравам.Пометка = Пометка;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОтборРолейПоПравамПометка()
	
	
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти 

#КонецОбласти

#Область Таблицы

#Область ИмяТаблицы
#КонецОбласти

#КонецОбласти

#Область Команды
#КонецОбласти

#КонецОбласти

#Область Подключаемые
#КонецОбласти

#Область Процедуры

&НаСервере
Процедура ЗаполнитьСвойстваОбъектаБазы()
	
	ЭтаОбработка = ЭтаОбработка();
	
	дз_СвойстваОбъектаБазы = РеквизитФормыВЗначение("СвойстваОбъектаБазы");
	дз_СвойстваОбъектаБазы.Строки.Очистить();
	
	Если Не (Параметры.ОбъектБазы = Неопределено) Тогда
		
		Если ТипЗнч(Параметры.ОбъектБазы) = Тип("Структура") Тогда
			
			Если Параметры.ОбъектБазы.ТипОбъекта = "ПользовательИнформационнойБазы" Тогда
				
				ПользовательБазы = ПользователиИнформационнойБазы.НайтиПоИмени(Параметры.ОбъектБазы.ИмяПользователя);
				
				Если Не (ПользовательБазы = Неопределено) Тогда
					
					МетаданныеПользователя = ЭтаОбработка().МетаданныеПользователяИнформационнойБазы();
					
					Для каждого СвойствоПользователя Из МетаданныеПользователя Цикл
						
						стр_СвойстваОбъектаБазы = дз_СвойстваОбъектаБазы.Строки.Добавить();
						стр_СвойстваОбъектаБазы.Имя           = СвойствоПользователя.Имя;
						стр_СвойстваОбъектаБазы.Синоним       = СвойствоПользователя.Синоним;
						стр_СвойстваОбъектаБазы.Представление = ПользовательБазы[СвойствоПользователя.Имя];
						стр_СвойстваОбъектаБазы.Значение      = ПользовательБазы[СвойствоПользователя.Имя];
						стр_СвойстваОбъектаБазы.Тип           = "";
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если (Параметры.ИмяКоллекции = "Общие") И (Параметры.ИмяЭлементаКоллекции = "Общие") Тогда
			
			Заголовок = Параметры.ИмяКоллекции;
			
			// Общие
			
			стр_УзелОбщие = дз_СвойстваОбъектаБазы.Строки.Добавить();
			стр_УзелОбщие.Имя           = "Общие";
			стр_УзелОбщие.Синоним       = "Общие";
			стр_УзелОбщие.Представление = "Общие";
			стр_УзелОбщие.Тип           = "СистемнаяИнформация";
			
			СистемнаяИнформация = Новый СистемнаяИнформация;
			ИменаСвойств = ЭтаОбработка.ИменаСвойствОбъектаБазы("СистемнаяИнформация");
			
			Для каждого ИмяСвойства Из ИменаСвойств Цикл
				
				ЗначениеСвойства = СистемнаяИнформация[ИмяСвойства];
				
				стр_СвойстваОбъектаБазы = стр_УзелОбщие.Строки.Добавить();
				
				стр_СвойстваОбъектаБазы.Имя           = ИмяСвойства;
				стр_СвойстваОбъектаБазы.Синоним       = ИмяСвойства;
				стр_СвойстваОбъектаБазы.Представление = ЗначениеСвойства;
				стр_СвойстваОбъектаБазы.Значение      = ЗначениеСвойства;
				стр_СвойстваОбъектаБазы.Тип           = "СистемнаяИнформация";
				
			КонецЦикла;
			
			// Конфигурация
			
			стр_УзелКонфигурация = дз_СвойстваОбъектаБазы.Строки.Добавить();
			стр_УзелКонфигурация.Имя           = "Конфигурация";
			стр_УзелКонфигурация.Синоним       = "Конфигурация";
			стр_УзелКонфигурация.Представление = "Конфигурация";
			стр_УзелКонфигурация.Тип           = "Конфигурация";
			
			ИменаСвойств = ЭтаОбработка.ИменаСвойствОбъектаБазы("Конфигурация");
			
			Для каждого ИмяСвойства Из ИменаСвойств Цикл
				
				ЗначениеСвойства = Метаданные[ИмяСвойства];
				
				стр_СвойстваОбъектаБазы = стр_УзелКонфигурация.Строки.Добавить();
				
				стр_СвойстваОбъектаБазы.Имя           = ИмяСвойства;
				стр_СвойстваОбъектаБазы.Синоним       = ИмяСвойства;
				стр_СвойстваОбъектаБазы.Представление = ЗначениеСвойства;
				стр_СвойстваОбъектаБазы.Значение      = ЗначениеСвойства;
				стр_СвойстваОбъектаБазы.Тип           = "Конфигурация";
				
			КонецЦикла;
			
		Иначе
			
			ОбъектБазы   = Метаданные[Параметры.ИмяКоллекции][Параметры.ИмяОбъектаБазы];
			ИменаСвойств = ЭтаОбработка.ИменаСвойствОбъектаБазы(Параметры.ИмяЭлементаКоллекции, Параметры.ИмяОбъектаБазы);
			
			стр_УзелВсеСвойства               = дз_СвойстваОбъектаБазы.Строки.Добавить();
			стр_УзелВсеСвойства.Имя           = Параметры.ИмяОбъектаБазы;
			стр_УзелВсеСвойства.Синоним       = Параметры.ИмяОбъектаБазы;
			стр_УзелВсеСвойства.Представление = Параметры.ИмяОбъектаБазы;
			стр_УзелВсеСвойства.Тип           = Параметры.ИмяЭлементаКоллекции;
			
			Для каждого ИмяСвойства Из ИменаСвойств Цикл
				
				Попытка
					ЗначениеСвойства = ОбъектБазы[ИмяСвойства];
				Исключение
					Продолжить;
				КонецПопытки;
				
				стр_СвойстваОбъектаБазы = стр_УзелВсеСвойства.Строки.Добавить();
				
				стр_СвойстваОбъектаБазы.Имя           = ИмяСвойства;
				стр_СвойстваОбъектаБазы.Синоним       = ИмяСвойства;
				стр_СвойстваОбъектаБазы.Представление = ЗначениеСвойства;
				стр_СвойстваОбъектаБазы.Значение      = ЗначениеСвойства;
				стр_СвойстваОбъектаБазы.Тип           = "Конфигурация";
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(дз_СвойстваОбъектаБазы, "СвойстваОбъектаБазы");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеРолиСистемы()
	
	тз_ВсеРоли = РеквизитФормыВЗначение("ВсеРолиСистемы");
	
	Для каждого Роль Из Метаданные.Роли Цикл
		стр_ВсеРоли = тз_ВсеРоли.Добавить();
		ЗаполнитьЗначенияСвойств(стр_ВсеРоли, Роль);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(тз_ВсеРоли, "ВсеРолиСистемы");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОтборРолейПоПравам()
	
	тз_ОтборРолейПоПравам = РеквизитФормыВЗначение("ОтборРолейПоПравам");
	тз_ОтборРолейПоПравам.Очистить();
	
	ОбъектМетаданных = Метаданные[ИмяКоллекции][ИмяОбъектаБазы];
	
	Для каждого стр_ВсеПраваСистемы Из ВсеПраваСистемы Цикл
		
		ЕстьПравоДоступа = Ложь;
		ПравоДоступно = Истина;
		
		Попытка
			ЕстьПравоДоступа = ПравоДоступа(стр_ВсеПраваСистемы.Имя, ОбъектМетаданных, Метаданные.Роли["Администрирование"]);
		Исключение
			ПравоДоступно = Ложь;
		КонецПопытки;
		
		Если Не ПравоДоступно Тогда
			Продолжить;
		КонецЕсли;
		
		стр_ОтборРолейПоПравам = тз_ОтборРолейПоПравам.Добавить();
		
		стр_ОтборРолейПоПравам.ИмяПрава = стр_ВсеПраваСистемы.Имя;
		стр_ОтборРолейПоПравам.Пометка  = Истина;
		
	КонецЦикла;
	
	//тз_ОтборРолейПоПравам.Сортировать("ИмяПрава");
	
	ЗначениеВРеквизитФормы(тз_ОтборРолейПоПравам, "ОтборРолейПоПравам");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеПраваСистемы()
	
	тз_ВсеПраваСистемы = РеквизитФормыВЗначение("ВсеПраваСистемы");
	тз_ВсеПраваСистемы.Очистить();
	
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Чтение",                                                   "Чтение");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Добавление",                                               "Добавление");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Изменение",                                                "Изменение");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Удаление",                                                 "Удаление");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Проведение",                                               "Проведение документов");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ОтменаПроведения",                                         "Отмена проведения документов");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Просмотр",                                                 "Просмотр");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеДобавление",                                  "Интерактивное добавление");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Редактирование",                                           "Редактирование");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивнаяПометкаУдаления",                             "Интерактивная пометка на удаление");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеСнятиеПометкиУдаления",                       "Интерактивное снятие пометки на удаление");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеУдалениеПомеченных",                          "Интерактивное удаление помеченных объектов");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеПроведение",                                  "Интерактивное проведение");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеПроведениеНеОперативное",                     "Интерактивное проведение (стандартными командами форм) документа в неоперативном режиме");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивнаяОтменаПроведения",                            "Интерактивная отмена проведения");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеИзменениеПроведенных",                        "Интерактивное редактирование проведенного документа. Если право не установлено, то пользователь не может проведенный документ удалить, установить пометку удаления, перепровести или сделать непроведенным. Форма такого документа открывается в режиме просмотра");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ВводПоСтроке",                                             "Использование режима ввода по строке");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "УправлениеИтогами",                                        "Управление итогами регистра бухгалтерии и регистра накопления; установка периода, по который рассчитаны итоги, и пересчет итогов)");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Использование",                                            "Использование");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеУдаление",                                    "Интерактивное непосредственное удаление");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Администрирование",                                        "Администрирование информационной базы; требуется наличия права ""Администрирование данных""");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "АдминистрированиеДанных",                                  "Право на административные действия над данными");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "МонопольныйРежим",                                         "Использование монопольного режима");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "АктивныеПользователи",                                     "Просмотр списка активных пользователей");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ЖурналРегистрации",                                        "Журнал регистрации");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ВнешнееСоединение",                                        "Внешнее соединение");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Automation",                                               "Использование automation");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеОткрытиеВнешнихОбработок",                    "Интерактивное открытие внешних обработок");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеОткрытиеВнешнихОтчетов",                      "Интерактивное открытие внешних отчетов");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Получение",                                                "Получение значения, не хранящегося в базе данных");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Установка",                                                "Установка значения, не сохраняемого в базе данных");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивнаяАктивация",                                   "Интерактивная активация");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Старт",                                                    "Старт бизнес-процесса");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивныйСтарт",                                       "Интерактивный старт бизнес-процесса");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Выполнение",                                               "Выполнение задачи");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеВыполнение",                                  "Интерактивное выполнение задачи");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "Вывод",                                                    "Вывод на печать, запись и копирование в буфер обмена");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ОбновлениеКонфигурацииБазыДанных",                         "Обновление конфигурации базы данных");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ТонкийКлиент",                                             "Право запуска тонкого клиента");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ВебКлиент",                                                "Право запуска веб-клиента");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ТолстыйКлиент",                                            "Право запуска толстого клиента");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "РежимВсеФункции",                                          "Право на использования режима ""Все функции""");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "СохранениеДанныхПользователя",                             "Право на сохранение данных пользователя настроек, избранного, истории)");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИзменениеСтандартнойАутентификации",                       "Пользователь имеет право изменять свои сохраненные параметры стандартной аутентификации внешнего источника данных");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИзменениеСтандартнойАутентификацииСеанса",                 "Пользователь имеет право изменять параметры стандартной аутентификации внешнего источника данных для текущего сеанса");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИзменениеАутентификацииОССеанса",                          "Пользователь имеет право изменять параметры стандартной аутентификации внешнего источника данных для текущего сеанса и текущего пользователя");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеУдалениеПредопределенныхДанныхДанных",        "Интерактивное удаление предопределенных данных");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивнаяПометкаУдаленияПредопределенныхДанныхДанных", "Интерактивная пометка предопределенных данных");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеСнятиеПометкиУдаленияПредопределенныхДанных", "Интерактивное снятие пометки предопределенных данных");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "ИнтерактивноеУдалениеПомеченныхПредопределенныхДанныхДан", "Интерактивное удаление помеченных предопределенных данных");
	ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, "АдминистрированиеРасширенийКонфигурации",                  "Право на администрирование расширений конфигурации");
	
	ЗначениеВРеквизитФормы(тз_ВсеПраваСистемы, "ВсеПраваСистемы");
	
КонецПроцедуры

&НаСервере
Процедура ВсеПраваСистемыДобавитьЗапись(тз_ВсеПраваСистемы, ИмяПрава, СинонимПрава)
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяПрава) Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область КонтекстнаяПодсказка
	
	Если Ложь Тогда
		тз_ВсеПраваСистемы = Новый ТаблицаЗначений;
	КонецЕсли;
	
	#КонецОбласти
	
	стр_ВсеПраваСистемы = тз_ВсеПраваСистемы.Добавить();
	стр_ВсеПраваСистемы.Имя = ИмяПрава;
	стр_ВсеПраваСистемы.Синоним = СинонимПрава;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПраваРоли(ИмяРоли)
	
	тз_ПраваРоли = РеквизитФормыВЗначение("ПраваРоли");
	тз_ПраваРоли.Очистить();
	
	ОбъектМетаданных = Метаданные[ИмяКоллекции][ИмяОбъектаБазы];
	
	Для каждого стр_ВсеПраваСистемы Из ВсеПраваСистемы Цикл
		
		ЕстьПравоДоступа = Ложь;
		ПравоДоступно = Истина;
		
		Попытка
			ЕстьПравоДоступа = ПравоДоступа(стр_ВсеПраваСистемы.Имя, ОбъектМетаданных, Метаданные.Роли[ИмяРоли]);
		Исключение
			ПравоДоступно = Ложь;
		КонецПопытки;
		
		Если Не ПравоДоступно Тогда
			Продолжить;
		КонецЕсли;
		
		стр_ПраваРоли = тз_ПраваРоли.Добавить();
		ЗаполнитьЗначенияСвойств(стр_ПраваРоли, стр_ВсеПраваСистемы);
		
		стр_ПраваРоли.ЕстьПраво = ЕстьПравоДоступа;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(тз_ПраваРоли, "ПраваРоли");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокПраваРоли(Форма, ИмяРоли)
	
	Форма.Элементы.ПраваРоли.Заголовок = "Права роли " + ИмяРоли;
	
КонецПроцедуры

#КонецОбласти

#Область Функции

&НаСервере
Функция ЭтаОбработка()
	
	Результат = РеквизитФормыВЗначение("Объект");
	Возврат Результат;
	
КонецФункции

#КонецОбласти