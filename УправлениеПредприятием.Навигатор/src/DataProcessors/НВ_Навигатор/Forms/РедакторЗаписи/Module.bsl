#Область Форма

#Область События

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаОбработка = ЭтаОбработка();
	
	ОбъектБазы      = Параметры.ОбъектБазы;
	
	ПараметрыЗаписи = Параметры.ПараметрыЗаписи;
	
	Если ПараметрыЗаписи.ТипТаблицы = "ТабличнаяЧасть" Тогда
		
		ДанныеЗаписиОбъекта = ОбъектБазы[ПараметрыЗаписи.ИмяТаблицы][ПараметрыЗаписи.НомерЗаписи - 1];
		
		МетаданныеОбъекта = ОбъектБазы.Метаданные();
		
		дз_ДанныеЗаписи = РеквизитФормыВЗначение("ДанныеЗаписи");
		дз_ДанныеЗаписи.Строки.Очистить();
		
		//
		
		стр_ДанныеЗаписи = дз_ДанныеЗаписи.Строки.Добавить();
		стр_ДанныеЗаписи.ИмяРеквизита       = "НомерСтроки";
		стр_ДанныеЗаписи.ЗначениеРеквизита  = ПараметрыЗаписи.НомерЗаписи;
		стр_ДанныеЗаписи.СинонимРеквизита   = "№";
		стр_ДанныеЗаписи.ТипРеквизита       = "Число";
		стр_ДанныеЗаписи.ПредставлениеТипа  = "Число";
		стр_ДанныеЗаписи.ИндексКартинки     = 44;
		стр_ДанныеЗаписи.ТолькоПросмотр     = Истина;
		
		//
		
		стр_ДанныеЗаписи = дз_ДанныеЗаписи.Строки.Добавить();
		стр_ДанныеЗаписи.ИмяРеквизита       = "Регистратор";
		стр_ДанныеЗаписи.ЗначениеРеквизита  = ОбъектБазы;
		стр_ДанныеЗаписи.СинонимРеквизита   = "Регистратор";
		стр_ДанныеЗаписи.ТипРеквизита       = ТипЗнч(ОбъектБазы);
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипЗнч(ОбъектБазы));
		стр_ДанныеЗаписи.ПредставлениеТипа  = ЭтаОбработка.СтрокаОписанияТипов(Новый ОписаниеТипов(МассивТипов));
		стр_ДанныеЗаписи.ИндексКартинки     = 44;
		стр_ДанныеЗаписи.ТолькоПросмотр     = Истина;
		
		//
		
		Для каждого РеквизитТЧ Из МетаданныеОбъекта.ТабличныеЧасти[ПараметрыЗаписи.ИмяТаблицы].Реквизиты Цикл
			
			стр_ДанныеЗаписи = дз_ДанныеЗаписи.Строки.Добавить();
			стр_ДанныеЗаписи.ИмяРеквизита         = РеквизитТЧ.Имя;
			стр_ДанныеЗаписи.ЗначениеРеквизита    = ДанныеЗаписиОбъекта[РеквизитТЧ.Имя];
			стр_ДанныеЗаписи.ТипРеквизита         = РеквизитТЧ.Тип;
			стр_ДанныеЗаписи.СинонимРеквизита     = РеквизитТЧ.Синоним;
			стр_ДанныеЗаписи.КомментарийРеквизита = РеквизитТЧ.Комментарий;
			стр_ДанныеЗаписи.ПредставлениеТипа    = ЭтаОбработка.СтрокаОписанияТипов(РеквизитТЧ.Тип);
			стр_ДанныеЗаписи.ИндексКартинки       = 45;
			
		КонецЦикла;
		
	ИначеЕсли ПараметрыЗаписи.ТипТаблицы = "РегистрНакопления" 
		Или ПараметрыЗаписи.ТипТаблицы = "РегистрСведений" 
		Или ПараметрыЗаписи.ТипТаблицы = "РегистрРасчета" Тогда
		
		КлючЗаписи = ПолучитьИзВременногоХранилища(ПараметрыЗаписи.КлючЗаписиАдрес);
		ДанныеЗаписиРегистра = ПараметрыЗаписи.ДанныеЗаписи; 
		
		Если (ПараметрыЗаписи.ТипТаблицы = "РегистрНакопления") Тогда

			НаборЗаписей = РегистрыНакопления[ПараметрыЗаписи.ИмяТаблицы].СоздатьНаборЗаписей();
			
			#Область Подсказка
			Если (Ложь) Тогда
				НаборЗаписей = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
			КонецЕсли;
			#КонецОбласти
			
			НаборЗаписей.Отбор.Регистратор.Установить(ДанныеЗаписиРегистра.Регистратор);
			НаборЗаписей.Прочитать();

			ЗаписьРегистра = НаборЗаписей[ДанныеЗаписиРегистра.НомерСтроки - 1];
			
			РегистрМетаданные = НаборЗаписей.Метаданные();
			
		ИначеЕсли (ПараметрыЗаписи.ТипТаблицы = "РегистрСведений") Тогда

			Если НВ_ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеЗаписиРегистра, "Регистратор")
					И Не (ДанныеЗаписиРегистра.Регистратор = Неопределено) Тогда

				НаборЗаписей = РегистрыСведений[ПараметрыЗаписи.ИмяТаблицы].СоздатьНаборЗаписей();

				#Область Подсказка
				Если (Ложь) Тогда
					НаборЗаписей = РегистрыСведений.ЦеныТоваровПоставщиков.СоздатьНаборЗаписей();
				КонецЕсли;
				#КонецОбласти

				НаборЗаписей.Отбор.Регистратор.Установить(ДанныеЗаписиРегистра.Регистратор);
				НаборЗаписей.Прочитать();

				ЗаписьРегистра = НаборЗаписей[ДанныеЗаписиРегистра.НомерСтроки - 1];
				
				РегистрМетаданные = НаборЗаписей.Метаданные();
				
			Иначе
				
				ЗаписьРегистра = РегистрыСведений[ПараметрыЗаписи.ИмяТаблицы].СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(ЗаписьРегистра, ДанныеЗаписиРегистра);
				ЗаписьРегистра.Прочитать();
				
				РегистрМетаданные = КлючЗаписи.Метаданные();
				
			КонецЕсли;
			
		ИначеЕсли (ПараметрыЗаписи.ТипТаблицы = "РегистрРасчета") Тогда

			ЗаписьРегистра = РегистрыРасчета[ПараметрыЗаписи.ИмяТаблицы].СоздатьМенеджерЗаписи();

		КонецЕсли;
				
		// Получить метаданные записи регистра.
		
		дз_ДанныеЗаписи = РеквизитФормыВЗначение("ДанныеЗаписи");
		дз_ДанныеЗаписи.Строки.Очистить();
		
		// Заполнить данные записи.
		
		Если Не (ЗаписьРегистра.Регистратор = Неопределено) Тогда

			стр_ДанныеЗаписи = дз_ДанныеЗаписи.Строки.Добавить();
			стр_ДанныеЗаписи.ИмяРеквизита = "НомерСтроки";
			стр_ДанныеЗаписи.ЗначениеРеквизита = ЗаписьРегистра.НомерСтроки;
			стр_ДанныеЗаписи.СинонимРеквизита = "№";
			стр_ДанныеЗаписи.ТипРеквизита = "Число";
			стр_ДанныеЗаписи.ПредставлениеТипа = "Число";
			стр_ДанныеЗаписи.ИндексКартинки = 44;
			стр_ДанныеЗаписи.ТолькоПросмотр = Истина;

			стр_ДанныеЗаписи = дз_ДанныеЗаписи.Строки.Добавить();
			стр_ДанныеЗаписи.ИмяРеквизита = "Регистратор";
			стр_ДанныеЗаписи.ЗначениеРеквизита = ЗаписьРегистра.Регистратор;
			стр_ДанныеЗаписи.СинонимРеквизита = "Регистратор";
			стр_ДанныеЗаписи.ТипРеквизита = ТипЗнч(ЗаписьРегистра.Регистратор);
			стр_ДанныеЗаписи.ТолькоПросмотр = Истина;

			Типы = Новый Массив;
			Типы.Добавить(ТипЗнч(ЗаписьРегистра.Регистратор));
			
			стр_ДанныеЗаписи.ПредставлениеТипа  = ЭтаОбработка.СтрокаОписанияТипов(Новый ОписаниеТипов(Типы));
			стр_ДанныеЗаписи.ИндексКартинки = 44;

		КонецЕсли;
		
		ИменаКоллекций = Новый Массив;
		ИменаКоллекций.Добавить("СтандартныеРеквизиты");
		ИменаКоллекций.Добавить("Измерения");
		ИменаКоллекций.Добавить("Ресурсы");
		ИменаКоллекций.Добавить("Реквизиты");		
		
		Для Каждого ИмяКоллекции Из ИменаКоллекций Цикл

			Для каждого ПолеРегистра Из РегистрМетаданные[ИмяКоллекции] Цикл
				
				Если (ИмяКоллекции = "СтандартныеРеквизиты" И ПолеРегистра.Имя = "Регистратор") Тогда
					Продолжить;
				КонецЕсли;
				
				Если (ИмяКоллекции = "СтандартныеРеквизиты" И ПолеРегистра.Имя = "НомерСтроки") Тогда
					Продолжить;
				КонецЕсли;
				
				стр_ДанныеЗаписи = дз_ДанныеЗаписи.Строки.Добавить();

				стр_ДанныеЗаписи.ИмяРеквизита = ПолеРегистра.Имя;
				стр_ДанныеЗаписи.ЗначениеРеквизита = ЗаписьРегистра[ПолеРегистра.Имя];
				стр_ДанныеЗаписи.ТипРеквизита = ПолеРегистра.Тип;
				стр_ДанныеЗаписи.СинонимРеквизита = ПолеРегистра.Синоним;
				стр_ДанныеЗаписи.КомментарийРеквизита = ПолеРегистра.Комментарий;
				стр_ДанныеЗаписи.ПредставлениеТипа = ЭтаОбработка.СтрокаОписанияТипов(ПолеРегистра.Тип);
				
				Если (ИмяКоллекции = "СтандартныеРеквизиты") Тогда
					стр_ДанныеЗаписи.ИндексКартинки = 44;
				ИначеЕсли (ИмяКоллекции = "Измерения") Тогда
					стр_ДанныеЗаписи.ИндексКартинки = 47;
				ИначеЕсли (ИмяКоллекции = "Ресурсы") Тогда
					стр_ДанныеЗаписи.ИндексКартинки = 48;
				ИначеЕсли (ИмяКоллекции = "Реквизиты") Тогда
					стр_ДанныеЗаписи.ИндексКартинки = 45;
				КонецЕсли;

			КонецЦикла;
			
		КонецЦикла;
		
		Если ПараметрыЗаписи.ТипТаблицы = "РегистрРасчета" Тогда
			
			Для каждого Перерасчет Из РегистрМетаданные.Перерасчеты Цикл
				
				стр_ДанныеЗаписи = дз_ДанныеЗаписи.Строки.Добавить();
				
				стр_ДанныеЗаписи.ИмяРеквизита         = Перерасчет.Имя;
				стр_ДанныеЗаписи.ЗначениеРеквизита    = ЗаписьРегистра[Перерасчет.Имя];
				стр_ДанныеЗаписи.ТипРеквизита         = Перерасчет.Тип;
				стр_ДанныеЗаписи.СинонимРеквизита     = Перерасчет.Синоним;
				стр_ДанныеЗаписи.КомментарийРеквизита = Перерасчет.Комментарий;
				стр_ДанныеЗаписи.ПредставлениеТипа    = ЭтаОбработка.СтрокаОписанияТипов(Перерасчет.Тип);
				стр_ДанныеЗаписи.ИндексКартинки       = 45; // Надо картинку перерасчета
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(дз_ДанныеЗаписи, "ДанныеЗаписи");
	
	Заголовок = Строка(ЗаписьРегистра);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = "Навигатор" Тогда
		
		Если ИмяСобытия = "ЗакрытьВсеОкнаРедакторов" Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Команда

&НаКлиенте
Процедура КомандаЗаписатьИзменения(Команда)
	
	ЗаписатьИзменения();
	//Оповестить(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьЗапись(Команда)
	
	ТекстВопроса = "";
	ТекстЗаголовка = "";
	
	Если ПараметрыЗаписи.ТипТаблицы = "ТабличнаяЧасть" Тогда
		ТекстВопроса = "Удалить строку табличной части?";
		ТекстЗаголовка = "Удаление строки";
	Иначе
		ТекстВопроса = "Удалить запись регистра?";
		ТекстЗаголовка = "Удаление записи";
	КонецЕсли; 
	
	//
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("КомандаУдалитьЗаписьЗавершение", ЭтаФорма),
		ТекстВопроса, 
		РежимДиалогаВопрос.ДаНет, 
		120, 
		КодВозвратаДиалога.Нет, 
		ТекстЗаголовка
	);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьЗаписьЗавершение(РезультатВопроса, ДпПараметры) Экспорт
	
	#Область Предусловия
	
	Если РезультатВопроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	УдалитьЗапись();
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти 

#Область Таблицы

#Область ДанныеЗаписи

&НаКлиенте
Процедура ДанныеЗаписиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	#Область Предусловия
	
	ТекущиеДанные = Элементы.ДанныеЗаписи.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "ДанныеЗаписиПредставлениеТипа" Тогда
		
		ОпределительСписка = ТекущиеДанные.ПредставлениеТипа;
		Оповестить("ОткрытьСписокЭлементов", ОпределительСписка, "Навигатор_ФормаРедакторЗаписи");
		
	Иначе
		
		ИмяРеквизитаДЗ = Сред(Поле.Имя, СтрДлина("ДанныеЗаписи") + 1);
		
		ПараметрыОткрытия = Новый Структура("ОбъектБазы", ТекущиеДанные[ИмяРеквизитаДЗ]);
		
		ПолноеИмяФормы = ПолноеИмяФормыОбработки(ЭтаФорма.ИмяФормы, "РедакторОбъекта");
		ОткрытьФорму(ПолноеИмяФормы, ПараметрыОткрытия, ЭтаФорма, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеЗаписиЗначениеРеквизитаПриИзменении(Элемент)
	
	#Область Предусловия
	
	ТекущиеДанные = Элементы.ДанныеЗаписи.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	ТекущиеДанные.Изменен = Истина;
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти 

#КонецОбласти

#Область Методы

#Область Процедуры

&НаСервере
Процедура ЗаписатьИзменения()
	
	дз_ДанныеЗаписи = РеквизитФормыВЗначение("ДанныеЗаписи");
	
	Если (ПараметрыЗаписи.ТипТаблицы = "ТабличнаяЧасть") Тогда
		
		ДанныеОбъекта = ОбъектБазы.ПолучитьОбъект();
		СтрокаТаблЧасти = ДанныеОбъекта[ПараметрыЗаписи.ИмяТаблицы][ПараметрыЗаписи.НомерЗаписи - 1];
		
		ОбъектБазыМд = ОбъектБазы.Метаданные();
		
		Для каждого РеквизитТЧ Из ОбъектБазыМд.ТабличныеЧасти[ПараметрыЗаписи.ИмяТаблицы].Реквизиты Цикл
			
			стр_ДанныеЗаписиИзм = дз_ДанныеЗаписи.Строки.Найти(РеквизитТЧ.Имя, "ИмяРеквизита");
			
			Если стр_ДанныеЗаписиИзм.Изменен = Ложь Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаТаблЧасти[РеквизитТЧ.Имя] = стр_ДанныеЗаписиИзм.ЗначениеРеквизита;
			
		КонецЦикла;
		
		Если ДанныеОбъекта.Модифицированность() Тогда
			ДанныеОбъекта.Записать();
			Модифицированность = Ложь;
		КонецЕсли;
		
	Иначе
		
		Если ПараметрыЗаписи.ТипТаблицы = "РегистрНакопления" Или ПараметрыЗаписи.ТипТаблицы = "РегистрСведений" Тогда
			
			Если ПараметрыЗаписи.ТипТаблицы = "РегистрНакопления" Тогда
				Регистр = РегистрыНакопления[ПараметрыЗаписи.ИмяТаблицы];
				РегистрМД = Метаданные.РегистрыНакопления[ПараметрыЗаписи.ИмяТаблицы];
			ИначеЕсли ПараметрыЗаписи.ТипТаблицы = "РегистрСведений" Тогда
				Регистр = РегистрыСведений[ПараметрыЗаписи.ИмяТаблицы];
				РегистрМД = Метаданные.РегистрыСведений[ПараметрыЗаписи.ИмяТаблицы];
			КонецЕсли;
			
			НаборЗаписей = Регистр.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ОбъектБазы);
			НаборЗаписей.Прочитать();
			
			ЗаписьРегистра = НаборЗаписей.Получить(ПараметрыЗаписи.НомерЗаписи - 1);
			
			Для каждого СтРеквизитРг Из РегистрМД.СтандартныеРеквизиты Цикл
				
				стр_ДанныеЗаписиИзм = дз_ДанныеЗаписи.Строки.Найти(СтРеквизитРг.Имя, "ИмяРеквизита");
				
				Если стр_ДанныеЗаписиИзм.Изменен = Ложь Тогда
					Продолжить;
				КонецЕсли;
				
				ЗаписьРегистра[СтРеквизитРг.Имя] = стр_ДанныеЗаписиИзм.ЗначениеРеквизита;
				
			КонецЦикла;
			
			Для каждого ИзмерениеРг Из РегистрМД.Измерения Цикл
				
				стр_ДанныеЗаписиИзм = дз_ДанныеЗаписи.Строки.Найти(ИзмерениеРг.Имя, "ИмяРеквизита");
				
				Если стр_ДанныеЗаписиИзм.Изменен = Ложь Тогда
					Продолжить;
				КонецЕсли;
				
				ЗаписьРегистра[ИзмерениеРг.Имя] = стр_ДанныеЗаписиИзм.ЗначениеРеквизита;
				
			КонецЦикла;
			
			Для каждого РеквизитРг Из РегистрМД.Реквизиты Цикл
				
				стр_ДанныеЗаписиИзм = дз_ДанныеЗаписи.Строки.Найти(РеквизитРг.Имя, "ИмяРеквизита");
				
				Если стр_ДанныеЗаписиИзм.Изменен = Ложь Тогда
					Продолжить;
				КонецЕсли;
				
				ЗаписьРегистра[РеквизитРг.Имя] = стр_ДанныеЗаписиИзм.ЗначениеРеквизита;
				
			КонецЦикла;
			
			Если НаборЗаписей.Модифицированность() Тогда
				
				НаборЗаписей.Записать(Истина);
				Модифицированность = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтрДанныеЗаписи = дз_ДанныеЗаписи.Строки.НайтиСтроки(Новый Структура("Изменен", Истина));
	
	Для каждого стр_ДанныеЗаписи Из СтрДанныеЗаписи Цикл
		стр_ДанныеЗаписи.Изменен = Ложь;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(дз_ДанныеЗаписи, "ДанныеЗаписи");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЗапись()
	
	Если (ПараметрыЗаписи.ТипТаблицы = "ТабличнаяЧасть") Тогда
		
		ДанныеОбъекта = ОбъектБазы.ПолучитьОбъект();
		СтрокаТаблЧасти = ДанныеОбъекта[ПараметрыЗаписи.ИмяТаблицы][ПараметрыЗаписи.НомерЗаписи - 1];
		
		Попытка
			ДанныеОбъекта[ПараметрыЗаписи.ИмяТаблицы].Удалить(СтрокаТаблЧасти);
		Исключение
			//
		КонецПопытки;
		
		Если ДанныеОбъекта.Модифицированность() Тогда
			ДанныеОбъекта.Записать();
			Модифицированность = Ложь;
		КонецЕсли;
		
	Иначе
		
		Если ПараметрыЗаписи.ТипТаблицы = "РегистрНакопления" Или ПараметрыЗаписи.ТипТаблицы = "РегистрСведений" Тогда
			
			Если ПараметрыЗаписи.ТипТаблицы = "РегистрНакопления" Тогда
				Регистр = РегистрыНакопления[ПараметрыЗаписи.ИмяТаблицы];
				РегистрМД = Метаданные.РегистрыНакопления[ПараметрыЗаписи.ИмяТаблицы];
			ИначеЕсли ПараметрыЗаписи.ТипТаблицы = "РегистрСведений" Тогда
				Регистр = РегистрыСведений[ПараметрыЗаписи.ИмяТаблицы];
				РегистрМД = Метаданные.РегистрыСведений[ПараметрыЗаписи.ИмяТаблицы];
			КонецЕсли;
			
			НаборЗаписей = Регистр.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ОбъектБазы);
			НаборЗаписей.Прочитать();
			
			ЗаписьРегистра = НаборЗаписей.Получить(ПараметрыЗаписи.НомерЗаписи - 1);
			
			НаборЗаписей.Удалить(ЗаписьРегистра);
			
			Если НаборЗаписей.Модифицированность() Тогда
				НаборЗаписей.Записать(Истина);
				Модифицированность = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область Функции

&НаСервере
Функция ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки)
	
	Результат = ЭтаОбработка().ПолноеИмяФормыОбработки(ИмяТекущейФормы, ИмяФормыОбработки);
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЭтаОбработка()
	
	Результат = РеквизитФормыВЗначение("Объект");
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецОбласти
