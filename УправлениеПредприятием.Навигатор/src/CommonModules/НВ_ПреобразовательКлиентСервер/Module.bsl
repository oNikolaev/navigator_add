// Извлекает имя поля таблицы-источника списка по имени колонки
// 
// Параметры:
// 	ИмяКолонкиСписка - Строка, имя колонки списка, например: "Колонка_777_РегистрыСведений_777_РегистрСведений_777_ЦеныТоваровПоставщиков_777_Активность_777_3"
// 	
// Возвращаемое значение:
//	Строка, имя поля таблицы, например: "Активность"
// 	
Функция ИмяПоляПоИмениКолонкиСписка(ИмяКолонкиСписка) Экспорт
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	Если Не ЗначениеЗаполнено(ИмяКолонкиСписка) Тогда
		Возврат ПустойРезультат;	
	КонецЕсли;
	#КонецОбласти
	
	// Получить имя поля по имени колонки.
	
	ИмяПоля = "";
	РЧИ = РазделительЧастейИмен();
	
	ИмяКолонкиСпискаЧасти = НВ_СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяКолонкиСписка, РЧИ);
	
	Если (ИмяКолонкиСпискаЧасти.Количество() = 0) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	ИмяПоля = ИмяКолонкиСпискаЧасти[ИмяКолонкиСпискаЧасти.ВГраница()];
	
	Если (НВ_СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ИмяПоля)) Тогда
		ИмяПоля = ИмяКолонкиСпискаЧасти[ИмяКолонкиСпискаЧасти.ВГраница() - 1]; 
	КонецЕсли; 
	
	
	// Вернуть результат.
	
	Результат = ИмяПоля;	
	Возврат Результат; 
	
КонецФункции

// Записывает текущие данные списка в структуру. 
// 
// Параметры:
// 	Форма - УправляемаяФорма, форма.
// 	ИмяСписка - Строка, имя списка.
// 	
// Возвращаемое значение:
// 	Структура, данные текущей строки в виде структуры. 
//
Функция ТекущиеДанныеСпискаСтруктура(Форма, ИмяСписка) Экспорт
	
	Результат = Новый Структура;
	ПустойРезультат = Неопределено;
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяСписка) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	ТекущиеДанные = Форма.Элементы[ИмяСписка].ТекущиеДанные;
	
	Если (ТекущиеДанные = Неопределено) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	СтруктураДанныхСтроки = Новый Структура;
	
	ТаблицаФормы = Форма.Элементы[ИмяСписка]; 
	
	Для Каждого КолонкаСписка Из ТаблицаФормы.ПодчиненныеЭлементы Цикл
		
		ИмяПоля = ИмяПоляПоИмениКолонкиСписка(КолонкаСписка.Имя);
		СтруктураДанныхСтроки.Вставить(ИмяПоля, ТекущиеДанные[КолонкаСписка.Имя]);
		
	КонецЦикла;
	
	Результат = СтруктураДанныхСтроки;	 
	Возврат Результат; 
	
КонецФункции

// Имя списка элементов, табличной части, таблицы движений по связанной с ним команде.
//
// Параметры:
//	ИмяЭлементаКоманды - Строка, имя команды (например: "Команда_Закрыть_Список_Справочники_Справочник_ДоговорыКонтрагентов_2").
//
// Возвращаемое значение:
//	Строка. Имя элемента-списка (например: "Список_Справочники_Справочник_ДоговорыКонтрагентов_2").
//
Функция ИмяСпискаПоИмениКоманды(ИмяЭлементаКоманды) Экспорт
	
	Результат = "";
	ПустойРезультат = "";
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяЭлементаКоманды) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	РЧИ = РазделительЧастейИмен();
	
	ЧастиСтроки = НВ_СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
		ИмяЭлементаКоманды, 
		РЧИ
	);
	
	ТипСписка = ЧастиСтроки[2];
	
	Если ТипСписка = "ТабличнаяЧасть" Тогда
		
		ИмяСписка = НВ_СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"%1"
			+ РЧИ + "%2"
			, ЧастиСтроки[2], ЧастиСтроки[3]
		);
		
	ИначеЕсли ТипСписка = "РегистрНакопления" Или ТипСписка = "РегистрСведений" Или ТипСписка = "РегистрРасчета" Или ТипСписка = "РегистрБухгалтерии" Тогда
		
		ИмяСписка = НВ_СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"%1"
			+ РЧИ + "%2"
			, ЧастиСтроки[2], ЧастиСтроки[3]
		);
		
	Иначе
		
		ИмяСписка = НВ_СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"Список"
			+ РЧИ + "%1"
			+ РЧИ + "%2"
			+ РЧИ + "%3"
			+ РЧИ
			+ "%4", ЧастиСтроки[3], ЧастиСтроки[4], ЧастиСтроки[5], ЧастиСтроки[6]
		);
		
	КонецЕсли;
	
	Результат = ИмяСписка;
	
	Возврат Результат;
	
КонецФункции

// Параметры табличной части, таблицы движений по связанной с ним команде.
//
// Параметры:
//	ИмяЭлементаКоманды - Строка, имя команды 
//		(например: "Команда_777_РедактированиеЗаписи_777_Список_777_РегистрыСведений_777_РегистрСведений_777_ЦеныТоваров_777_2").
//
// Возвращаемое значение:
//	Структура. Параметры таблицы объекта (табличной части, связанного набора движений), @см. Тип_ПараметрыТаблицыПоИмениКоманды().
//
Функция ПараметрыТаблицыПоИмениКоманды(ИмяЭлементаКоманды) Экспорт
	
	Результат       = Тип_ПараметрыТаблицыПоИмениКоманды();
	ПустойРезультат = Неопределено;
	
	#Область Предусловия
	
	Если Не ЗначениеЗаполнено(ИмяЭлементаКоманды) Тогда
		Возврат ПустойРезультат;
	КонецЕсли;
	
	#КонецОбласти
	
	РЧИ = РазделительЧастейИмен();
	
	ЧастиСтроки = НВ_СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
		ИмяЭлементаКоманды, 
		РЧИ
	);
	
	Если (ЧастиСтроки[1] = "ОткрытьСтрокуВРедактореЗаписи") Тогда
		Результат.ТипТаблиц  = ЧастиСтроки[2];
		Результат.ТипТаблицы = ЧастиСтроки[2];
		Результат.ИмяТаблицы = ЧастиСтроки[3];
	Иначе
		Результат.ТипТаблиц  = ЧастиСтроки[3];
		Результат.ТипТаблицы = ЧастиСтроки[4];
		Результат.ИмяТаблицы = ЧастиСтроки[5];
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция РазделительЧастейИмен() Экспорт
	
	Возврат "_777_";
	
КонецФункции

Функция Тип_ПараметрыТаблицыПоИмениКоманды()
	
	Результат = Новый Структура("ТипТаблицы, ИмяТаблицы");
	Результат.Вставить("ТипТаблиц", ""); // "РегистрыСведений"
	Результат.Вставить("ТипТаблицы", ""); // "РегистрСведений"
	Результат.Вставить("ИмяТаблицы", ""); // "ЦеныТоваров"
	
	Возврат Результат;
	
КонецФункции